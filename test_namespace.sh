#!/bin/bash
# =======================================================
# Teste de Namespaces e Isolamento de Ambientes
# Projeto 2 - Sistemas Operacionais
# Uso: sudo ./test_namespace.sh <nome_do_ambiente>
# =======================================================

AMBIENTE=$1
CGROUP_PATH="/sys/fs/cgroup/$AMBIENTE"

# -------------------------------------------------------
# Verifica√ß√µes iniciais
# -------------------------------------------------------
if [ -z "$AMBIENTE" ]; then
    echo "‚ùå Uso: sudo $0 <nome_do_ambiente>"
    exit 1
fi

if [ ! -d "$CGROUP_PATH" ]; then
    echo "‚ùå Cgroup $AMBIENTE n√£o encontrado em $CGROUP_PATH"
    exit 1
fi

echo "üîç Verificando processos do ambiente '$AMBIENTE'..."
PIDS=$(cat "$CGROUP_PATH/cgroup.procs" 2>/dev/null)

if [ -z "$PIDS" ]; then
    echo "‚ùå Nenhum processo encontrado no cgroup!"
    exit 1
fi

PID=$(echo "$PIDS" | head -n1)
echo "‚úÖ Usando PID principal: $PID"
echo

# -------------------------------------------------------
# Informa√ß√µes de namespaces
# -------------------------------------------------------
echo "=============================="
echo "üìÇ NAMESPACES DO PROCESSO"
echo "=============================="
sudo readlink /proc/$PID/ns/*

echo
echo "=============================="
echo "üîç COMPARA√á√ÉO COM O HOST"
echo "=============================="
echo "PID namespace (host vs ambiente):"
echo "Host: $(sudo readlink /proc/1/ns/pid)"
echo "Amb : $(sudo readlink /proc/$PID/ns/pid)"
echo
echo "UTS namespace (hostname):"
echo "Host: $(hostname)"
echo "Amb : $(sudo nsenter -t $PID -u hostname)"
echo
echo "Processos vis√≠veis dentro do namespace:"
sudo nsenter -t $PID -p ps -ef
echo

# -------------------------------------------------------
# Testes de recursos via Cgroups
# -------------------------------------------------------
echo "=============================="
echo "‚öôÔ∏è  TESTE DE LIMITES DE RECURSOS (Cgroups v2)"
echo "=============================="

# CPU
echo
echo "üßÆ CPU:"
if [ -f "$CGROUP_PATH/cpu.max" ]; then
    CPU_MAX=$(cat "$CGROUP_PATH/cpu.max")
    echo "  ‚Ä¢ Limite configurado (cpu.max): $CPU_MAX"
else
    echo "  ‚Ä¢ Arquivo cpu.max n√£o encontrado"
fi

if [ -f "$CGROUP_PATH/cpu.stat" ]; then
    echo "  ‚Ä¢ Estat√≠sticas atuais (cpu.stat):"
    cat "$CGROUP_PATH/cpu.stat" | sed 's/^/    - /'
else
    echo "  ‚Ä¢ Arquivo cpu.stat n√£o encontrado"
fi

# Mem√≥ria
echo
echo "üß† MEM√ìRIA:"
if [ -f "$CGROUP_PATH/memory.max" ]; then
    MEM_MAX=$(cat "$CGROUP_PATH/memory.max")
    echo "  ‚Ä¢ Limite configurado (memory.max): $MEM_MAX"
else
    echo "  ‚Ä¢ Arquivo memory.max n√£o encontrado"
fi

if [ -f "$CGROUP_PATH/memory.current" ]; then
    MEM_CUR=$(cat "$CGROUP_PATH/memory.current")
    echo "  ‚Ä¢ Uso atual (memory.current): $MEM_CUR bytes"
    if [ "$MEM_MAX" != "max" ]; then
        PCT=$(( 100 * MEM_CUR / MEM_MAX ))
        echo "  ‚Ä¢ Uso relativo: ${PCT}%"
    fi
else
    echo "  ‚Ä¢ Arquivo memory.current n√£o encontrado"
fi

# I/O
echo
echo "üíæ I/O:"
if [ -f "$CGROUP_PATH/io.max" ]; then
    echo "  ‚Ä¢ Limite configurado (io.max):"
    cat "$CGROUP_PATH/io.max" | sed 's/^/    - /'
else
    echo "  ‚Ä¢ Arquivo io.max n√£o encontrado"
fi

if [ -f "$CGROUP_PATH/io.stat" ]; then
    echo "  ‚Ä¢ Estat√≠sticas de I/O (io.stat):"
    cat "$CGROUP_PATH/io.stat" | sed 's/^/    - /'
else
    echo "  ‚Ä¢ Arquivo io.stat n√£o encontrado"
fi

# CPUs designadas (se cpuset estiver habilitado)
if [ -f "$CGROUP_PATH/cpuset.cpus" ]; then
    echo
    echo "üß© CPUSET:"
    echo "  ‚Ä¢ CPUs permitidas: $(cat $CGROUP_PATH/cpuset.cpus)"
fi

# -------------------------------------------------------
# Sum√°rio de isolamento
# -------------------------------------------------------
echo
echo "=============================="
echo "üìä SUM√ÅRIO FINAL"
echo "=============================="
PID_ISO=$( [ "$(sudo readlink /proc/1/ns/pid)" != "$(sudo readlink /proc/$PID/ns/pid)" ] && echo "SIM" || echo "N√ÉO" )
UTS_ISO=$( [ "$(hostname)" != "$(sudo nsenter -t $PID -u hostname)" ] && echo "SIM" || echo "N√ÉO" )
NET_ISO=$( sudo nsenter -t $PID -n ip link show | grep -q eth0 && echo "N√ÉO" || echo "SIM" )

echo "PID isolado?  $PID_ISO"
echo "UTS isolado?  $UTS_ISO"
echo "Rede isolada? $NET_ISO"

if [ -f "$CGROUP_PATH/memory.max" ]; then
    echo "Limite de Mem√≥ria: $(cat $CGROUP_PATH/memory.max)"
fi

if [ -f "$CGROUP_PATH/cpu.max" ]; then
    echo "Limite de CPU: $(cat $CGROUP_PATH/cpu.max)"
fi

echo
echo "‚úÖ Teste completo conclu√≠do!"
